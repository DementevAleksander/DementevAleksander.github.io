{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","classColor","map","filter","onFilterSelect","clazz","key","onClick","PostListItem","onDelete","onToggleImportant","onToggleLiked","like","classNames","important","PostList","posts","elements","item","id","itemProps","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","dataLocalstorage","deletedItem","addItem","maxId","index","findIndex","elem","before","slice","after","newArr","localStorage","setItem","JSON","stringify","body","datalistnotes","parse","getItem","forEach","element","push","console","log","Math","max","apply","newItem","old","items","length","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16c97f51.chunk.js","sourcesContent":["import AppHeader from './app-header'\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Мои заметки!</h1>\r\n            <h2>{allPosts} записей, из них понравилось {liked}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel'\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n    onUpdateSearch(e){\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Поиск по записям\"\r\n                value={this.state.term}\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n    }\r\n}","import PostStatusFilter from \"./post-status-filter\"\r\nexport default PostStatusFilter;","import React, {Component} from 'react';\r\nimport './post-status-filter.css';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor(props) {\r\n       super(props);\r\n       this.buttons = [\r\n           {name: 'all', label: 'Все', classColor: ''},\r\n           {name: 'like', label: <i className=\"fa fa-heart\"></i>, classColor: 'red'},\r\n           {name: 'important', label: <i className=\"fa fa-star\"></i>, classColor: 'yellow'},\r\n       ];\r\n    }\r\n\r\n   render() {\r\n\r\n       const buttons = this.buttons.map(({name, label, classColor}) => {\r\n           const {filter, onFilterSelect} = this.props;\r\n           const active = filter === name;\r\n           const clazz = active ?\r\n           `btn-info ${classColor}`\r\n           : 'btn-outline-secondary'\r\n           return (\r\n                <button type='button'\r\n                    className={`btn ${clazz}`}\r\n                    key={name}\r\n                    onClick={() => onFilterSelect(name)}>\r\n                    {label}\r\n                </button>\r\n\r\n                // <button \r\n                // type=\"button\" \r\n                // className=\"btn-star btn-sm\"\r\n                // onClick={onToggleImportant}>\r\n                //     <i className=\"fa fa-star\"></i>\r\n                // </button>\r\n           )\r\n       });\r\n\r\n       return (\r\n           <div className=\"btn-group\">\r\n               {buttons}\r\n           </div>\r\n       )\r\n   }\r\n}","import PostListItem from './post-list-item';\r\nexport default PostListItem;\r\n\r\n","import React, {Component} from 'react';\r\nimport './post-list-item.css';\r\n\r\nexport default class PostListItem extends Component {\r\n\r\n    render() {\r\n        const {label, onDelete, onToggleImportant, onToggleLiked, like, important} = this.props;\r\n        let classNames = 'app-list-item d-flex justify-content-between';\r\n\r\n        if (important) {\r\n            classNames +=' important';\r\n        }\r\n\r\n        if (like) {\r\n            classNames +=' like';\r\n        }\r\n\r\n        return (\r\n            <div className={classNames}>\r\n                <span \r\n                className=\"app-list-item-label\"\r\n                onClick={onToggleImportant}>\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button \r\n                    type=\"button\" \r\n                    className=\"btn-star btn-sm\"\r\n                    onClick={onToggleImportant}>\r\n                        <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button \r\n                    type=\"button\" \r\n                    className=\"btn-trash btn-sm\"\r\n                    onClick={onDelete}>\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <i\r\n                        className=\"fa fa-heart\"\r\n                        onClick={onToggleLiked}\r\n                    ></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import PostList from './post-list';\r\nexport default PostList;\r\n\r\n","import React from 'react';\r\nimport PostListItem from '../post-list-item';\r\nimport './post-list.css';\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\r\n\r\n    const elements = posts.map((item) => {\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n            <li key={id} className='list-group-item'>\r\n                <PostListItem \r\n                    {...itemProps}\r\n                    onDelete={() => onDelete(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                    onToggleLiked={() => onToggleLiked(id)}/>\r\n            </li>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <ul className=\"app-list list-group\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PostList;","import PostAddForm from './post-add-form';\r\nexport default PostAddForm;","import React, {Component} from 'react';\r\nimport './post-add-form.css';\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        };\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onValueChange(e) {\r\n        this.setState({\r\n            text: e.target.value\r\n        });\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text);\r\n        // localStorage.setItem('datalistnotes', JSON.stringify(this.state.text))\r\n\r\n        // const datalistnotesAdd = JSON.parse(localStorage.getItem('datalistnotes'))\r\n\r\n        //     datalistnotesAdd.push({\r\n        //     text: todoEl.innerText,\r\n        //     completed: todoEl.classList.contains('completed')\r\n        //   })\r\n      \r\n        // localStorage.setItem('todos', JSON.stringify(todos))\r\n\r\n        this.setState({\r\n            text: ''\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <form \r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"О чем вы думаете сейчас?\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\">\r\n                    Добавить\r\n                    </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import App from './app'\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\n// import WhoAmIAll from '../test_project/test_project';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component { //Компонент с приложением\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data : [\r\n                {label: \"Прошлое забыто, будущее закрыто, настоящее даровано\", important: true, id: 1},\r\n                {label: \"Там, где есть руины, есть надежда на сокровища\", important: false, like: true, id: 2},\r\n                {label: \"У тихих людей самые громкие мысли\", important: false, id: 3},\r\n                {label: \"Примите неопределенность. Когда ничего не ясно, все возможно\", important: false, id: 4}\r\n            ],\r\n            term: '',\r\n            filter: 'all',\r\n            dataLocalstorage: false\r\n        };\r\n        this.deletedItem = this.deletedItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n        this.maxId = 5;\r\n    }\r\n\r\n    deletedItem(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            const before = data.slice(0, index);\r\n            const after = data.slice(index + 1);\r\n            const newArr = [...before, ...after];\r\n            localStorage.setItem('datalistnotes', JSON.stringify(newArr))\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    async addItem(body) {\r\n\r\n        const datalistnotes = []\r\n        \r\n        await JSON.parse(localStorage.getItem('datalistnotes')).forEach(element => {\r\n            datalistnotes.push(\r\n                element.id\r\n            )\r\n        });\r\n        console.log(datalistnotes)\r\n        console.log(Math.max.apply(null, datalistnotes))\r\n\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            // id: this.maxId++,\r\n            id: (Math.max.apply(null, datalistnotes)) + 1,\r\n        }\r\n\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n            localStorage.setItem('datalistnotes', JSON.stringify(newArr))\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleImportant(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            localStorage.setItem('datalistnotes', JSON.stringify(newArr))\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        }); \r\n    }\r\n\r\n    onToggleLiked(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, like: !old.like};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            localStorage.setItem('datalistnotes', JSON.stringify(newArr))\r\n            return {\r\n                data: newArr\r\n            }\r\n        }); \r\n    }\r\n\r\n    searchPost(items, term) {\r\n        if (term.length === 0) {\r\n            return items\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(term) > -1\r\n        });\r\n    }\r\n\r\n    filterPost(items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like)\r\n        } else if (filter === 'important') {\r\n            return items.filter(item => item.important)\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n\r\n    onUpdateSearch(term) {\r\n        this.setState({term})\r\n    }\r\n    \r\n    onFilterSelect(filter){\r\n        this.setState({filter})\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const {data} = this.state;\r\n        const datalistnotes = await JSON.parse(localStorage.getItem('datalistnotes'))\r\n        if(!datalistnotes) {\r\n            await localStorage.setItem('datalistnotes', JSON.stringify(data))\r\n            this.setState({\r\n                dataLocalstorage: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                data: datalistnotes,\r\n                dataLocalstorage: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.dataLocalstorage) {\r\n            return (\r\n                <div>\r\n                    <h1>Идёт загрузка...</h1>\r\n                </div>\r\n            )\r\n        } else {\r\n            const {data, term, filter} = this.state;\r\n            // const datalistnotes = JSON.parse(localStorage.getItem('datalistnotes'))\r\n            const liked = data.filter((item) => item.like).length;\r\n            const allPosts = data.length;\r\n            const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n\r\n            return (\r\n                <div className=\"app\">\r\n                    <AppHeader liked={liked} allPosts={allPosts}/>\r\n                    <div className=\"search-panel d-flex\">\r\n                        <SearchPanel\r\n                            onUpdateSearch={this.onUpdateSearch}/>\r\n                        <PostStatusFilter\r\n                            filter={filter}\r\n                            onFilterSelect={this.onFilterSelect}/>\r\n                    </div>\r\n                    <PostList \r\n                        posts={visiblePosts}\r\n                        onDelete={this.deletedItem}\r\n                        onToggleImportant={this.onToggleImportant}\r\n                        onToggleLiked={this.onToggleLiked}\r\n                    />\r\n                    <PostAddForm\r\n                        onAdd={this.addItem}\r\n                    />\r\n                    {/* <WhoAmIAll/> */}\r\n                </div>\r\n            )  \r\n        }\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\n\nReactDOM.render(\n\n    <App/>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}